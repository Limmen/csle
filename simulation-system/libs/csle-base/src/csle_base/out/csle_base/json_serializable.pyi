import abc
from abc import ABC, abstractmethod
from typing import Any, Dict

class JSONSerializable(ABC, metaclass=abc.ABCMeta):
    @staticmethod
    @abstractmethod
    def from_dict(d: Dict[str, Any]) -> JSONSerializable: ...
    @abstractmethod
    def to_dict(self) -> Dict[str, Any]: ...
    @staticmethod
    @abstractmethod
    def from_json_file(json_file_path: str) -> JSONSerializable: ...
    def to_json_str(self) -> str: ...
    def to_json_file(self, json_file_path: str) -> None: ...
